{
    "kind": "Template",
    "apiVersion": "v1",
    "metadata": {
        "annotations": {
            "description": "Application template Coolstore Monolith using binary build.",
            "iconClass": "icon-jboss",
            "tags": "eap,postgresql,javaee,java,database,jboss,xpaas",
            "version": "1.0.0",
            "openshift.io/display-name": "Red Hat Demos - Coolstore Monnolith using binary build"
        },
        "name": "coolstore-monolith-uat-demo"
    },
    "labels": {
        "template": "coolstore-monolith-uat-demo"
    },
    "message": "The resources (build config, deploy config, service, imagestreams, etc) for running the Coolstore Monolith demo has been created in your project. To deploy the application go to your source directoy and build that code using mvn -Popenshift package and then start the build using oc start-build coolstore --from-file=deployments/ROOT.war.",
    "parameters": [
        {
            "displayName": "Database JNDI Name",
            "description": "Database JNDI name used by application to resolve the datasource, e.g. java:/jboss/datasources/postgresql",
            "name": "DB_JNDI",
            "value": "java:jboss/datasources/CoolstoreDS",
            "required": false
        },
        {
            "displayName": "Database Name",
            "description": "Database name",
            "name": "DB_DATABASE",
            "value": "monolith",
            "required": true
        },
        {
            "displayName": "Datasource Minimum Pool Size",
            "description": "Sets xa-pool/min-pool-size for the configured datasource.",
            "name": "DB_MIN_POOL_SIZE",
            "required": false
        },
        {
            "displayName": "Datasource Maximum Pool Size",
            "description": "Sets xa-pool/max-pool-size for the configured datasource.",
            "name": "DB_MAX_POOL_SIZE",
            "required": false
        },
        {
            "displayName": "Datasource Transaction Isolation",
            "description": "Sets transaction-isolation for the configured datasource.",
            "name": "DB_TX_ISOLATION",
            "required": false
        },
        {
            "displayName": "PostgreSQL Maximum number of connections",
            "description": "The maximum number of client connections allowed. This also sets the maximum number of prepared transactions.",
            "name": "POSTGRESQL_MAX_CONNECTIONS",
            "required": false
        },
        {
            "displayName": "PostgreSQL Shared Buffers",
            "description": "Configures how much memory is dedicated to PostgreSQL for caching data.",
            "name": "POSTGRESQL_SHARED_BUFFERS",
            "required": false
        },
        {
            "displayName": "A-MQ cluster password",
            "description": "A-MQ cluster admin password",
            "name": "MQ_CLUSTER_PASSWORD",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "required": true
        },
        {
            "displayName": "Database Username",
            "description": "Database user name",
            "name": "DB_USERNAME",
            "from": "user[a-zA-Z0-9]{3}",
            "generate": "expression",
            "required": true
        },
        {
            "displayName": "Database Password",
            "description": "Database user password",
            "name": "DB_PASSWORD",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "required": true
        },
        {
            "displayName": "Github Webhook Secret",
            "description": "GitHub trigger secret",
            "name": "GITHUB_WEBHOOK_SECRET",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "required": true
        },
        {
            "displayName": "Generic Webhook Secret",
            "description": "Generic build trigger secret",
            "name": "GENERIC_WEBHOOK_SECRET",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "required": true
        },
        {
            "displayName": "ImageStream Namespace",
            "description": "Namespace in which the ImageStreams for Red Hat Middleware images are installed. These ImageStreams are normally installed in the openshift namespace. You should only need to modify this if you've installed the ImageStreams in a different namespace/project.",
            "name": "IMAGE_STREAM_NAMESPACE",
            "value": "openshift",
            "required": true
        },
        {
            "displayName": "JGroups Cluster Password",
            "description": "JGroups cluster password",
            "name": "JGROUPS_CLUSTER_PASSWORD",
            "from": "[a-zA-Z0-9]{8}",
            "generate": "expression",
            "required": true
        },
        {
            "displayName": "Deploy Exploded Archives",
            "description": "Controls whether exploded deployment content should be automatically deployed",
            "name": "AUTO_DEPLOY_EXPLODED",
            "value": "false",
            "required": false
        }
    ],
    "objects": [
        {
            "kind": "Service",
            "apiVersion": "v1",
            "spec": {
                "ports": [{
                    "port": 8080,
                    "targetPort": 8080
                }],
                "selector": {
                    "deploymentConfig": "coolstore-uat"
                }
            },
            "metadata": {
                "name": "coolstore-uat",
                "labels": {
                    "application": "coolstore-uat"
                },
                "annotations": {
                    "description": "The web server's http port.",
                    "service.alpha.openshift.io/dependencies": "[{\"name\":\"coolstore-uat-postgresql\",\"namespace\":\"\",\"kind\":\"Service\"}]"
                }
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "spec": {
                "ports": [{
                    "port": 5432,
                    "targetPort": 5432
                }],
                "selector": {
                    "deploymentConfig": "coolstore-uat-postgresql"
                }
            },
            "metadata": {
                "name": "coolstore-uat-postgresql",
                "labels": {
                    "application": "coolstore-uat"
                },
                "annotations": {
                    "description": "The database server's port."
                }
            }
        },
        {
            "kind": "Route",
            "apiVersion": "v1",
            "metadata": {
                "name": "www",
                "labels": {
                    "application": "coolstore-uat"
                },
                "annotations": {
                    "description": "Route for application's http service."
                }
            },
            "spec": {
                "to": {
                    "name": "coolstore-uat"
                }
            }
        },
        {
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "coolstore-uat",
                "labels": {
                    "application": "coolstore-uat"
                }
            },
            "spec": {
                "strategy": {
                    "type": "Rolling",
                    "rollingParams": {
                        "updatePeriodSeconds": 1,
                        "intervalSeconds": 1,
                        "timeoutSeconds": 600,
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    },
                    "resources": {}
                },
                "triggers": [{
                    "type": "ImageChange",
                    "imageChangeParams": {
                        "automatic": true,
                        "containerNames": [
                            "coolstore-uat"
                        ],
                        "from": {
                            "kind": "ImageStreamTag",
                            "name": "coolstore:latest"
                        }
                    }
                },
                    {
                        "type": "ConfigChange"
                    }
                ],
                "replicas": 1,
                "selector": {
                    "deploymentConfig": "coolstore-uat"
                },
                "template": {
                    "metadata": {
                        "name": "coolstore-uat",
                        "labels": {
                            "deploymentConfig": "coolstore-uat",
                            "application": "coolstore-uat"
                        }
                    },
                    "spec": {
                        "serviceAccountName": "coolstore-serviceaccount",
                        "terminationGracePeriodSeconds": 75,
                        "containers": [{
                            "name": "coolstore-uat",
                            "image": "coolstore",
                            "imagePullPolicy": "Always",
                            "volumeMounts": [{
                                "name": "eap-keystore-volume",
                                "mountPath": "/etc/eap-secret-volume",
                                "readOnly": true
                            },
                                {
                                    "name": "eap-jgroups-keystore-volume",
                                    "mountPath": "/etc/jgroups-encrypt-secret-volume",
                                    "readOnly": true
                                }
                            ],
                            "lifecycle": {
                                "preStop": {
                                    "exec": {
                                        "command": [
                                            "/opt/eap/bin/jboss-cli.sh",
                                            "-c",
                                            ":shutdown(timeout=60)"
                                        ]
                                    }
                                }
                            },
                            "livenessProbe": {
                                "exec": {
                                    "command": [
                                        "/bin/bash",
                                        "-c",
                                        "/opt/eap/bin/livenessProbe.sh"
                                    ]
                                }
                            },
                            "readinessProbe": {
                                "httpGet": {
                                    "path": "/health.jsp",
                                    "port": 8080,
                                    "scheme": "HTTP"
                                },
                                "timeoutSeconds": 1,
                                "periodSeconds": 20,
                                "successThreshold": 1,
                                "failureThreshold": 5
                            },
                            "ports": [{
                                "name": "jolokia",
                                "containerPort": 8778,
                                "protocol": "TCP"
                            },
                                {
                                    "name": "http",
                                    "containerPort": 8080,
                                    "protocol": "TCP"
                                },
                                {
                                    "name": "https",
                                    "containerPort": 8443,
                                    "protocol": "TCP"
                                },
                                {
                                    "name": "ping",
                                    "containerPort": 8888,
                                    "protocol": "TCP"
                                }
                            ],
                            "env": [{
                                "name": "DB_SERVICE_PREFIX_MAPPING",
                                "value": "coolstore-uat-postgresql=DB"
                            },
                                {
                                    "name": "DB_JNDI",
                                    "value": "${DB_JNDI}"
                                },
                                {
                                    "name": "DB_USERNAME",
                                    "value": "${DB_USERNAME}"
                                },
                                {
                                    "name": "DB_PASSWORD",
                                    "value": "${DB_PASSWORD}"
                                },
                                {
                                    "name": "DB_DATABASE",
                                    "value": "${DB_DATABASE}"
                                },
                                {
                                    "name": "TX_DATABASE_PREFIX_MAPPING",
                                    "value": "coolstore-uat-postgresql=DB"
                                },
                                {
                                    "name": "DB_MIN_POOL_SIZE",
                                    "value": "${DB_MIN_POOL_SIZE}"
                                },
                                {
                                    "name": "DB_MAX_POOL_SIZE",
                                    "value": "${DB_MAX_POOL_SIZE}"
                                },
                                {
                                    "name": "DB_TX_ISOLATION",
                                    "value": "${DB_TX_ISOLATION}"
                                },
                                {
                                    "name": "OPENSHIFT_KUBE_PING_LABELS",
                                    "value": "application=coolstore-uat"
                                },
                                {
                                    "name": "OPENSHIFT_KUBE_PING_NAMESPACE",
                                    "valueFrom": {
                                        "fieldRef": {
                                            "fieldPath": "metadata.namespace"
                                        }
                                    }
                                },
                                {
                                    "name": "HTTPS_KEYSTORE_DIR",
                                    "value": "/etc/eap-secret-volume"
                                },
                                {
                                    "name": "HTTPS_KEYSTORE",
                                    "value": "keystore.jks"
                                },
                                {
                                    "name": "HTTPS_KEYSTORE_TYPE",
                                    "value": "JKS"
                                },
                                {
                                    "name": "HTTPS_NAME",
                                    "value": "jboss"
                                },
                                {
                                    "name": "HTTPS_PASSWORD",
                                    "value": "mykeystorepass"
                                },
                                {
                                    "name": "MQ_CLUSTER_PASSWORD",
                                    "value": "${MQ_CLUSTER_PASSWORD}"
                                },
                                {
                                    "name": "JGROUPS_ENCRYPT_SECRET",
                                    "value": "coolstore-secret"
                                },
                                {
                                    "name": "JGROUPS_ENCRYPT_KEYSTORE_DIR",
                                    "value": "/etc/jgroups-encrypt-secret-volume"
                                },
                                {
                                    "name": "JGROUPS_ENCRYPT_KEYSTORE",
                                    "value": "jgroups.jceks"
                                },
                                {
                                    "name": "JGROUPS_ENCRYPT_NAME",
                                    "value": "secret-key"
                                },
                                {
                                    "name": "JGROUPS_ENCRYPT_PASSWORD",
                                    "value": "password"
                                },
                                {
                                    "name": "JGROUPS_CLUSTER_PASSWORD",
                                    "value": "${JGROUPS_CLUSTER_PASSWORD}"
                                },
                                {
                                    "name": "AUTO_DEPLOY_EXPLODED",
                                    "value": "${AUTO_DEPLOY_EXPLODED}"
                                },
                                {
                                    "name": "DEFAULT_JOB_REPOSITORY",
                                    "value": "coolstore-uat-postgresql"
                                },
                                {
                                    "name": "TIMER_SERVICE_DATA_STORE",
                                    "value": "coolstore-uat-postgresql"
                                }
                            ]
                        }],
                        "volumes": [{
                            "name": "eap-keystore-volume",
                            "secret": {
                                "secretName": "coolstore-secret"
                            }
                        },
                            {
                                "name": "eap-jgroups-keystore-volume",
                                "secret": {
                                    "secretName": "coolstore-secret"
                                }
                            }
                        ]
                    }
                }
            }
        },
        {
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "coolstore-uat-postgresql",
                "labels": {
                    "application": "coolstore-uat"
                }
            },
            "spec": {
                "strategy": {
                    "type": "Recreate"
                },
                "triggers": [{
                    "type": "ImageChange",
                    "imageChangeParams": {
                        "automatic": true,
                        "containerNames": [
                            "coolstore-uat-postgresql"
                        ],
                        "from": {
                            "kind": "ImageStreamTag",
                            "namespace": "${IMAGE_STREAM_NAMESPACE}",
                            "name": "postgresql:9.5"
                        }
                    }
                },
                    {
                        "type": "ConfigChange"
                    }
                ],
                "replicas": 1,
                "selector": {
                    "deploymentConfig": "coolstore-uat-postgresql"
                },
                "template": {
                    "metadata": {
                        "name": "coolstore-uat-postgresql",
                        "labels": {
                            "deploymentConfig": "coolstore-uat-postgresql",
                            "application": "coolstore-uat"
                        }
                    },
                    "spec": {
                        "terminationGracePeriodSeconds": 60,
                        "containers": [{
                            "name": "coolstore-uat-postgresql",
                            "image": "postgresql",
                            "imagePullPolicy": "Always",
                            "readinessProbe": {
                                "exec": {
                                    "command": [
                                        "/bin/sh",
                                        "-i",
                                        "-c",
                                        "psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"
                                    ]
                                },
                                "initialDelaySeconds": 5,
                                "timeoutSeconds": 1,
                                "periodSeconds": 10,
                                "successThreshold": 1,
                                "failureThreshold": 3
                            },
                            "livenessProbe": {
                                "tcpSocket": {
                                    "port": 5432
                                },
                                "initialDelaySeconds": 30,
                                "timeoutSeconds": 1,
                                "periodSeconds": 10,
                                "successThreshold": 1,
                                "failureThreshold": 3
                            },
                            "ports": [{
                                "containerPort": 5432,
                                "protocol": "TCP"
                            }],
                            "env": [{
                                "name": "POSTGRESQL_USER",
                                "value": "${DB_USERNAME}"
                            },
                                {
                                    "name": "POSTGRESQL_PASSWORD",
                                    "value": "${DB_PASSWORD}"
                                },
                                {
                                    "name": "POSTGRESQL_DATABASE",
                                    "value": "${DB_DATABASE}"
                                },
                                {
                                    "name": "POSTGRESQL_MAX_CONNECTIONS",
                                    "value": "${POSTGRESQL_MAX_CONNECTIONS}"
                                },
                                {
                                    "name": "POSTGRESQL_MAX_PREPARED_TRANSACTIONS",
                                    "value": "${POSTGRESQL_MAX_CONNECTIONS}"
                                },
                                {
                                    "name": "POSTGRESQL_SHARED_BUFFERS",
                                    "value": "${POSTGRESQL_SHARED_BUFFERS}"
                                }
                            ]
                        }]
                    }
                }
            }
        }
    ]
}